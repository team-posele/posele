{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar HomeScreen = function HomeScreen() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(TouchableOpacity, {\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Play\"\n      })\n    })\n  });\n};\n\nvar LeaderBoard = function LeaderBoard() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      children: \"Leader Board!\"\n    })\n  });\n};\n\nvar MyTabs = function MyTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"LeaderBoard\",\n      component: LeaderBoard,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n};\n\nexport default MyTabs;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '60%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/home/jarroyo28/Projects/Senior-Phase/posele/screens/MyTabs.js"],"names":["React","NavigationContainer","createBottomTabNavigator","Tab","HomeScreen","styles","container","button","buttonText","LeaderBoard","MyTabs","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","width","padding","borderRadius","fontSize","fontWeight"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,wBAAR,QAAuC,+BAAvC;;;AAEA,IAAMC,GAAG,GAAGD,wBAAwB,EAApC;;AAEA,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,gBAAD;AAAkB,MAAA,KAAK,EAAED,MAAM,CAACE,MAAhC;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA;AAAA;AADF;AADF,IADF;AAOD,CARD;;AAUA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,IAAD;AAAA;AAAA;AADF,IADF;AAKD,CAND;;AAQA,IAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,SACE,MAAC,GAAD,CAAK,SAAL;AACE,IAAA,aAAa,EAAE;AAAA,UAAEC,KAAF,QAAEA,KAAF;AAAA,aAAc;AAC3BC,QAAAA,UAAU,EAAE,2BAA4B;AAAA,cAA1BC,OAA0B,SAA1BA,OAA0B;AAAA,cAAjBC,KAAiB,SAAjBA,KAAiB;AAAA,cAAVC,IAAU,SAAVA,IAAU;AACtC,cAAIC,QAAJ;;AAEA,cAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AACzBD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,wBAAH,GAA8B,gCAAhD;AACD,WAFD,MAEO,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AACpCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,cAAH,GAAoB,UAAtC;AACD;;AAGD,iBAAO,KAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED;AAA7C,YAAP;AACD,SAZ0B;AAa3BI,QAAAA,qBAAqB,EAAE,QAbI;AAc3BC,QAAAA,uBAAuB,EAAE;AAdE,OAAd;AAAA,KADjB;AAAA,eAkBE,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,MAAjB;AAAwB,MAAA,SAAS,EAAEf,UAAnC;AAA+C,MAAA,OAAO,EAAE;AAACgB,QAAAA,WAAW,EAAE;AAAd;AAAxD,MAlBF,EAmBE,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,aAAjB;AAA+B,MAAA,SAAS,EAAEX,WAA1C;AAAuD,MAAA,OAAO,EAAE;AAACW,QAAAA,WAAW,EAAE;AAAd;AAAhE,MAnBF;AAAA,IADF;AAuBD,CAxBD;;AA0BA,eAAeV,MAAf;AAEA,IAAML,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BhB,EAAAA,SAAS,EAAE;AACTiB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BlB,EAAAA,MAAM,EAAE;AACNmB,IAAAA,eAAe,EAAE,SADX;AAENC,IAAAA,KAAK,EAAE,KAFD;AAGNC,IAAAA,OAAO,EAAE,EAHH;AAINC,IAAAA,YAAY,EAAE,EAJR;AAKNJ,IAAAA,UAAU,EAAE;AALN,GANuB;AAa/BjB,EAAAA,UAAU,EAAE;AACVM,IAAAA,KAAK,EAAE,OADG;AAEVgB,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,UAAU,EAAE;AAHF;AAbmB,CAAlB,CAAf","sourcesContent":["import {StyleSheet, Text, TouchableOpacity, View} from 'react-native';\nimport React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\n\nconst Tab = createBottomTabNavigator();\n\nconst HomeScreen = () => {\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.button}>\n        <Text style={styles.buttonText}>Play</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst LeaderBoard = () => {\n  return (\n    <View style={styles.container}>\n      <Text>Leader Board!</Text>\n    </View>\n  );\n};\n\nconst MyTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({route}) => ({\n        tabBarIcon: ({focused, color, size}) => {\n          let iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          }\n\n          // You can return any component that you like here!\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray',\n      })}\n    >\n      <Tab.Screen name=\"Home\" component={HomeScreen} options={{headerShown: false}} />\n      <Tab.Screen name=\"LeaderBoard\" component={LeaderBoard} options={{headerShown: false}} />\n    </Tab.Navigator>\n  );\n};\n\nexport default MyTabs;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '60%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}